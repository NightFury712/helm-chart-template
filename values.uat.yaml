# Default values for myproject.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: repository_name
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: 
  - name: vf-azure-cr
nameOverride: "myproject"
fullnameOverride: "myproject"
namespace: "myproject-uat-helm"
environment: uat

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

containerPort: 80

service:
  type: ClusterIP
  port: 80

services:
  internal-api:
    replicas: 1
    image:
      tag: 50147
    env:
      - name: Serilog__Format
        value: myproject-uat-internal-{0:yyyy.MM.dd}
      - name: PathBase
        valueFrom:
          configMapKeyRef:
            name: myproject-config
            key: InternalPathBase
    envFrom:
      - configMapRef:
          name: myproject-config
      - configMapRef:
          name: apm-config
    volumes:
      - name: internal-api-volume
        configMap:
          name: internal-api-config
    volumeMounts:
      - mountPath: /app/appsettings.json
        subPath: appsettings.json
        name: internal-api-volume
      - mountPath: /app/appsettings.UAT.json
        subPath: appsettings.UAT.json
        name: internal-api-volume
    autoscaling: 
      enabled: true
    public: true
  integration-api:
    replicas: 1
    image:
      tag: 50148
    env:
      - name: Serilog__Format
        value: myproject-uat-integration-{0:yyyy.MM.dd}
      - name: PathBase
        valueFrom:
          configMapKeyRef:
            name: myproject-config
            key: IntegrationPathBase
    envFrom:
      - configMapRef:
          name: myproject-config
      - configMapRef:
          name: apm-config
    volumes:
      - name: integration-api-volume
        configMap:
          name: integration-api-config
    volumeMounts:
      - mountPath: /app/appsettings.json
        subPath: appsettings.json
        name: integration-api-volume
      - mountPath: /app/appsettings.UAT.json
        subPath: appsettings.UAT.json
        name: integration-api-volume
    autoscaling: 
      enabled: true
    public: true
  
ingress:
  enabled: true
  className: "alb"
  annotations: 
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: "myproject-ingress-group"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "15"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    alb.ingress.kubernetes.io/group.order: "13"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.com.vn
      paths:
        - path: /helm/internal
          serviceName: internal-api
          servicePort: 80
          pathType: Prefix
        - path: /helm/integrations
          serviceName: integration-api
          servicePort: 80
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - example.com.vn

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1024m
    memory: 2048Mi
  requests:
    cpu: 250m
    memory: 256Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true


nodeSelector: {}

tolerations: []

affinity: {}
